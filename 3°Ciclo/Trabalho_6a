/*Baseando-se na tarefa 5, aplique uma ordenação de bubble sort para garantir que a lista de notas esteja crescente.*/

import java.util.Scanner;

public class Main {

    public static int[] bubbleSort(int[] notas) {
        int aux = 0;
        int i = 0;
        int j = 0;
        int tamanho = notas.length;

        for(i = 0; i < tamanho; i++){
            for(j = 0; j < tamanho - 1 - i; j++){
                if(notas[j] > notas[j + 1]){
                    aux = notas[j];
                    notas[j] = notas[j+1];
                    notas[j+1] = aux;
                }
            }
        }
        return notas;
    }
    
    public static int binarySearch(int[] notasOrdenadas, int notaDeCorte) {
        int min = 0;
        int max = notasOrdenadas.length - 1;

        while (min <= max) {
            int mid = min + (max - min) / 2;
            
            if (notasOrdenadas[mid] >= notaDeCorte) {
                max = mid - 1;
            } else {
                min = mid + 1;
            }
        }
        return min;
    }

    public static char filtroNotas(int[] notasOrdenadas, int i){

        if(notasOrdenadas[i] < 21)
            return 'F';
            
        else if(notasOrdenadas[i] > 20 && notasOrdenadas[i] < 41)
            return 'D';
            
        else if(notasOrdenadas[i] > 40 && notasOrdenadas[i] < 61)
            return 'C';
            
        else if(notasOrdenadas[i] > 60 && notasOrdenadas[i] < 81)
            return 'B';
            
        else
            return 'A';
    }

    public static void main(String[] args) {
        int[] notas = {77, 14, 84, 28, 42, 35, 49, 56, 91, 70, 7, 21, 98, 63};
        int[] notasOrdenadas = bubbleSort(notas);
        int notaDeCorte;
        char notaLetra;
        Scanner scanner = new Scanner(System.in);

        System.out.println("Digite a nota de corte (0 a 100): ");
        while (true) {
            notaDeCorte = scanner.nextInt();
            if (notaDeCorte >= 0 && notaDeCorte <= 100) {
                break;
            } else {
                System.out.println("Nota inválida. Digite uma nota entre 0 e 100: ");
            }
        }

        int indicePrimeiroAprovado = binarySearch(notas, notaDeCorte);

        if (indicePrimeiroAprovado < notas.length) {
            System.out.println("Alunos aprovados com nota maior ou igual a " + notaDeCorte + ":");
            for (int i = indicePrimeiroAprovado; i < notas.length; i++) {
                notaLetra = filtroNotas(notas, i);
                System.out.println("Nota: " + notasOrdenadas[i] + " Nota em Letra: " + notaLetra);
            }
        } else {
            System.out.println("Nenhum aluno aprovado com nota maior ou igual a " + notaDeCorte + ".");
        }
    }
}
